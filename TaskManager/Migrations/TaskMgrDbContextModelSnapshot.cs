// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager;

#nullable disable

namespace TaskManager.Migrations
{
    [DbContext(typeof(TaskMgrDbContext))]
    partial class TaskMgrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManager.Models.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProject"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProject")
                        .HasName("Project_pk");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("TaskManager.Models.Task", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTask"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdAssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdProject")
                        .HasColumnType("int");

                    b.Property<int>("IdTaskType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTask")
                        .HasName("Task_pk");

                    b.HasIndex("IdAssignedTo");

                    b.HasIndex("IdCreator");

                    b.HasIndex("IdProject");

                    b.HasIndex("IdTaskType");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("TaskManager.Models.TaskType", b =>
                {
                    b.Property<int>("IdTaskType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTaskType"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTaskType")
                        .HasName("TaskType_pk");

                    b.ToTable("TaskType");
                });

            modelBuilder.Entity("TaskManager.Models.TeamMember", b =>
                {
                    b.Property<int>("IdTeamMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeamMember"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTeamMember")
                        .HasName("TeamMember_pk");

                    b.ToTable("TeamMember");
                });

            modelBuilder.Entity("TaskManager.Models.Task", b =>
                {
                    b.HasOne("TaskManager.Models.TeamMember", "IdAssignedToNavigation")
                        .WithMany("TaskIdAssignedToNavigations")
                        .HasForeignKey("IdAssignedTo")
                        .IsRequired()
                        .HasConstraintName("Task_TeamMember2");

                    b.HasOne("TaskManager.Models.TeamMember", "IdCreatorNavigation")
                        .WithMany("TaskIdCreatorNavigations")
                        .HasForeignKey("IdCreator")
                        .IsRequired()
                        .HasConstraintName("Task_TeamMember1");

                    b.HasOne("TaskManager.Models.Project", "IdProjectNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("IdProject")
                        .IsRequired()
                        .HasConstraintName("Task_Project");

                    b.HasOne("TaskManager.Models.TaskType", "IdTaskTypeNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTaskType")
                        .IsRequired()
                        .HasConstraintName("Task_TaskType");

                    b.Navigation("IdAssignedToNavigation");

                    b.Navigation("IdCreatorNavigation");

                    b.Navigation("IdProjectNavigation");

                    b.Navigation("IdTaskTypeNavigation");
                });

            modelBuilder.Entity("TaskManager.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManager.Models.TaskType", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManager.Models.TeamMember", b =>
                {
                    b.Navigation("TaskIdAssignedToNavigations");

                    b.Navigation("TaskIdCreatorNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
